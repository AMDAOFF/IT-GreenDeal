@page "/Schedule/Create"
@using System.Globalization;
@using Absence.Service.ScheduleService;
@using Absence.Service.SubjectService;

@*@inject IWeekScheduleService WeekScheduleService*@

<h1>Create Schedule</h1>

<div class="row">
    <div class="col-md-3">
        <div class="form-group">
            <div class="input-group input-group-lg">
                <div class="input-group-prepend">
                    <label class="input-group-text">Week number</label>
                </div>
                <input type="text" @bind="WeekNumber" placeholder="Week number" class="form-control">
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="form-group">
            <div class="input-group input-group-lg">
                <div class="input-group-prepend">
                    <label class="input-group-text">Start date</label>
                </div>
                <input type="date" @bind="StartDate" class="form-control">
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="form-group">
            <div class="input-group input-group-lg">
                <div class="input-group-prepend">
                    <label class="input-group-text">End date</label>
                </div>
                <input type="date" @bind="EndDate" class="form-control">
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="form-group">
            <div class="input-group input-group-lg">
                <input type="button" @bind="EndDate" @onclick="GenerateWeek" class="form-control btn btn-success">
            </div>
        </div>
    </div>
</div>

@* //TODO: Create SelectList for each day, for each hour *@

@*@foreach (var weekDay in WeekDays)
{
    <label>@weekDay.Date;</label>

}*@

@code {
    public int WeekNumber { get; set; }
    public DateTime StartDate { get; set; }
    public DateTime EndDate { get; set; }
    public DateTime Date { get; set; }
    public int FKClassroomId { get; set; }
    public int FKSubjectId { get; set; }
    public int FKStudentClassId { get; set; }

    //public List<FullDayScheduleDTO> WeekDays { get; set; }


    protected override async Task OnInitializedAsync()
    {
        StartDate = DateTime.Now;
        Date = DateTime.Now;
        //WeekDays = new List<FullDayScheduleDTO>();

        var test = DateTime.Now.Date;
        var test2 = DateTime.Now.TimeOfDay;

        while (StartDate.DayOfWeek != DayOfWeek.Monday)
        {
            StartDate = StartDate.AddDays(1);
        }

        EndDate = StartDate;
        while (EndDate.DayOfWeek != DayOfWeek.Sunday)
        {
            EndDate = EndDate.AddDays(1);
        }
        WeekNumber = ISOWeek.GetWeekOfYear(StartDate);

    }

    private void GenerateWeek()
    {
        var weekDay = StartDate;
        while (weekDay.Date < EndDate.Date)
        {

            if (weekDay.DayOfWeek != DayOfWeek.Saturday && weekDay.DayOfWeek != DayOfWeek.Sunday)
            {
                //WeekDays.Add(new FullDayScheduleDTO() { Date = weekDay.Date });

            }
            weekDay = weekDay.AddDays(1);

        }
    }
}
