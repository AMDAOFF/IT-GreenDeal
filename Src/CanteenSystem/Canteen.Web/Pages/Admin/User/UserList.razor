@page "/admin/user/userlist"
@inject IUserService _service
@inject IJSRuntime JSRuntime
@*<h3>UserList</h3>*@

<div class="container">
	<table class="table table-dark">
		<thead>
			<tr>
				<th scope="col">NAVN</th>
				<th scope="col">ROLLE</th>
				<th class="w-25">HANDLING</th>
			</tr>
		</thead>
		<tbody>
			@if (Users != null)
			{
				@foreach (var user in Users)
				{
					<tr>
						<td>@user.Name @user.Surname</td>
						<td>@user.Role</td>
						<td class="w-25">
							<button class="btn btn-danger" @onclick="@(() => DeleteUser(user))">Slet</button>
							<button class="btn btn-success" @onclick="@(() => LoadInfoModal(user.Id))" data-toggle="modal" data-target="#editUserModal">Edit</button>
						</td>
					</tr>
				}
			}
		</tbody>
	</table>
</div>

<div class="modal fade" id="editUserModal" tabindex="-1" role="dialog" aria-labelledby="userEditModalLabel" aria-hidden="true">
	<div class="modal-dialog" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="userEditModalLabel">Redigere bruger</h5>
				<button type="button" class="close" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">&times;</span>
				</button>
			</div>
			<div class="modal-body">
				<form>
					<div class="form-group">
						<h3 class="form-text">Fornavn</h3>
						<input placeholder="Indtast fornavn" class="form-control" value="@UserDTO.Name" />
					</div>
					<div class="form-group">
						<h3 class="form-text">Efternavn</h3>
						<input placeholder="Indtast efternavn" class="form-control" value="@UserDTO.Surname" />
					</div>
					<div class="form-group">
						<h3 class="form-text">Email</h3>
						<input placeholder="Indtast email" class="form-control" value="@UserDTO.Email" />
					</div>
					<div>
						<h3 class="form-group">Roller</h3>
						@if (Roles != null)
						{
							<select class="custom-select" value="@UserDTO.Role">
								@foreach (var Role in Roles)
								{
									<option value="@Role">
										@Role
									</option>
								}
							</select>
						}
					</div>
					<div class="modal-footer">
						<button type="button" class="btn btn-secondary" data-dismiss="modal">Luk</button>
						<input type="submit" class="btn btn-primary" @onclick="EditUser"/>
					</div>
				</form>
			</div>
		</div>
	</div>
</div>


@code {
	private List<SlimApplicationUserDTO> Users;
	private SlimApplicationUserDTO UserDTO = new SlimApplicationUserDTO();
	private List<string> Roles { get; set; }

	protected override async Task OnInitializedAsync()
	{
		Users = await _service.GetUsersAsync();
		Roles = (List<string>)await _service.GetRoles();
		StateHasChanged();
	}

	public void LoadInfoModal(string id)
	{
		UserDTO = Users.FirstOrDefault(x => x.Id == id);
	}

	public async Task EditUser()
	{
		//bool confirmed = await JSRuntime.InvokeAsync<bool>("confirm", "Er du sikker på at du vil opdatere denne bruger?");
		//if (confirmed == true)
		//{
			await _service.EditUser(UserDTO);
			//StateHasChanged();
		//}
	}

	private async Task DeleteUser(SlimApplicationUserDTO userDTO)
	{
		await _service.DeleteUser(userDTO);
		Users.Remove(userDTO);
		StateHasChanged();
	}
}
